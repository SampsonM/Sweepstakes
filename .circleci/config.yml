version: 2.1

executors:
  node-12-executor:
    docker:
      - image: circleci/node:12
    working_directory: ~/sweep
  bash-shell-executor:
    docker:
      - image: alpine/git
    working_directory: ~/sweep
  # mongo-express:
  #   docker:
  #     - image: mongo-express
  #     - image: mongo:4.2.0
  #       port: 27017:27017
  #       environment:
  #         - MONGODB_USERNAME: "myrootuser"
  #         - MONGODB_PASSWORD: "mypassword"
  #   working_directory: ~/sweep

commands:
  restore-save-cache:
    description: "Save and retore cache"
    parameters:
      checksumFile:
        type: string
      paths:
        type: string
      whichDeps:
        type: string
    steps:
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "<< parameters.checksumFile >>" }}
            - node-v1-{{ .Branch }}
      - run:
          name: INSTALL - << parameters.whichDeps >> dependencies
          working_directory: << parameters.paths >>
          command: npm install
      - save_cache:
          key: node-v1-{{ .Branch }}-{{ checksum "<< parameters.checksumFile >>" }}
          paths:
            - << parameters.paths >>/node_modules

jobs:
  run-fe:
    executor: bash-shell-executor
    steps:
      - checkout
      - run:
          name: Check Scripts
          working_directory: .
          command: git log -1 --pretty=%B | grep -q 'FE:' && exit 0
  run-be:
    executor: bash-shell-executor
    steps:
      - checkout
      - run:
          name: Check Scripts
          working_directory: .
          command: git log -1 --pretty=%B | grep -q 'BE:' && exit 0
  test-ui:
    executor: node-12-executor
    steps:
      - checkout

      #--------
      #Â Install App dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/src/package.json
          paths: ./FE/src
          whichDeps: "App"

      #--------
      # Test App
      #--------
      - run:
          name: TEST - App
          working_directory: ./FE/src
          command: npm run test:unit
  deploy-ui:
    executor: node-12-executor
    steps:
      - checkout

      #--------
      # Restore App dependencies
      #--------
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "FE/src/package.json" }}
            - node-v1-{{ .Branch }}

      #--------
      # Build App
      #--------
      - run:
          name: BUILD - App
          working_directory: ./FE/src
          command: npm run build

      #--------
      # Install cached function dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/functions/package.json
          paths: ./FE/functions
          whichDeps: "Functions"

      #--------
      # Install cached firebase dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/package.json
          paths: ./FE
          whichDeps: "Firebase"

      #--------
      # Deploy App
      #--------
      - run:
          name: DEPLOY - App
          working_directory: ./FE
          command: ./node_modules/.bin/firebase deploy --token="$FIREBASE_TOKEN"
  test-server:
    docker:
      - image: mongo-express
      - image: mongo:4.2.0

    working_directory: ~/sweep

    environment:
      KEY: $JWT_KEY
      OWNER_AUTH_KEY: $OWNER_AUTH_KEY
      DB_URL: DB_URL

    steps:
      - checkout

      #--------
      # Install cached function dependencies
      #--------
      - restore-save-cache:
          checksumFile: BE/package.json
          paths: ./BE
          whichDeps: "Server"
      - run:
          name: Test -Run Mongo Server
          working_directory: ./BE
          command: npm run test
      #--------
      # Test Server
      #--------
      - run:
          name: Test - Server
          working_directory: ./BE
          command: |
            echo 'DB_URL'
            npm run test

workflows:
  version: 2
  test_and_deploy:
    jobs:
      # - run-fe
      # - run-be
      # - test-ui:
      #     requires:
      #       - run-fe
      # - deploy-ui:
          # filters:
          #   branches:
          #     only: master
          # requires:
          #   - test-ui
      - test-server
          # requires:
          #   - run-be
