version: 2.1

executors:
  node-12-executor:
    docker:
      - image: timbru31/node-alpine-git
    working_directory: ~/sweep
  bash-shell-executor:
    docker:
      - image: alpine/git
    working_directory: ~/sweep

commands:
  restore-save-cache:
    description: Save and restore cache
    parameters:
      checksumFile:
        type: string
      paths:
        type: string
      whichDeps:
        type: string
    steps:
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "<< parameters.checksumFile >>" }}
            - node-v1-{{ .Branch }}
      - run:
          name: INSTALL - << parameters.whichDeps >> dependencies
          working_directory: << parameters.paths >>
          command: npm install
      - save_cache:
          key: node-v1-{{ .Branch }}-{{ checksum "<< parameters.checksumFile >>" }}
          paths:
            - << parameters.paths >>/node_modules

  check-server-should-deploy:
    description: Determine if BE should deploy
    steps:
      - run:
          name: Check if B/E should run
          command: |
            apk update
            apk add --no-cache git
            git --version

            if ! git log -1 --pretty=%B | grep -q 'BE:'; then
              circleci-agent step halt
            fi

  check-ui-should-run:
    steps:
      - run:
          name: Check if UI should deploy
          command: |
            if ! git log -1 --pretty=%B | grep -q 'FE:'; then
              circleci-agent step halt
            fi

jobs:      
  test-ui:
    executor: node-12-executor
    steps:
      - checkout
      - check-ui-should-run

      #--------
      #Â Install App dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/src/package.json
          paths: ./FE/src
          whichDeps: "App"

      #--------
      # Test App
      #--------
      - run:
          name: TEST - App
          working_directory: ./FE/src
          command: npm run test:unit
  deploy-ui:
    executor: node-12-executor
    steps:
      - checkout
      - check-ui-should-run

      #--------
      # Restore App dependencies
      #--------
      - restore_cache:
          keys:
            - node-v1-{{ .Branch }}-{{ checksum "FE/src/package.json" }}
            - node-v1-{{ .Branch }}

      #--------
      # Build App
      #--------
      - run:
          name: BUILD - App
          working_directory: ./FE/src
          command: npm run build

      #--------
      # Install cached function dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/functions/package.json
          paths: ./FE/functions
          whichDeps: "Functions"

      #--------
      # Install cached firebase dependencies
      #--------
      - restore-save-cache:
          checksumFile: FE/package.json
          paths: ./FE
          whichDeps: "Firebase"

      #--------
      # Deploy App
      #--------
      - run:
          name: DEPLOY - App
          working_directory: ./FE
          command: ./node_modules/.bin/firebase deploy --token="$FIREBASE_TOKEN"
  test-server:
    docker:
      - image: mongo-express
      - image: mongo:4.2.0

    working_directory: ~/sweep

    environment:
      KEY: $JWT_KEY
      OWNER_AUTH_KEY: $OWNER_AUTH_KEY
      DB_URL: mongodb://localhost:27017/

    steps:
      - checkout
      - check-server-should-deploy

      #--------
      # Install cached function dependencies
      #--------
      - restore-save-cache:
          checksumFile: BE/package.json
          paths: ./BE
          whichDeps: "Server"

      #--------
      # Test Server
      #--------
      - run:
          name: Test - Server
          working_directory: ./BE
          command: npm run test
  deploy-server:
    executor: bash-shell-executor
    steps:
      - checkout

      #--------
      # Deploy Server
      #--------
      - run:
          name: DEPLOY - Server
          working_directory: ./BE
          command: |
            git add . && git commit -m "DEPLOY" && git push heroku master

workflows:
  version: 2
  test_and_deploy:
    jobs:
      - test-ui
      - deploy-ui:
          filters:
            branches:
              only: master
          requires:
            - test-ui
      - test-server
      - deploy-server:
          requires:
            - test-server
